#!/usr/bin/env bash

export_env_dir() {
  # from https://devcenter.heroku.com/articles/buildpack-api#bin-compile
  env_dir=$1
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

export_env_dir $3
SLACK_PAYLOAD=$(cat <<EOF
{
  "blocks": [
    {
      "type": "section",
      "text": {
        "type": "mrkdwn",
        "text": "*MightyCheck* deployed :rocket:"
      }
    }
  ]
}
EOF
)

if [[ -z "${DEPLOY_NOTIFY_GITHUB_AUTH_TOKEN}" || -z "${DEPLOY_NOTIFY_GITHUB_ORG}" || -z "${DEPLOY_NOTIFY_GITHUB_PROJECT}" ]]; then
  # Not loading Github Data
  SLACK_PAYLOAD="$SLACK_PAYLOAD"
elif [[ -z "${SOURCE_VERSION}" ]]; then
  # We don't have the current git sha
  SLACK_PAYLOAD="$SLACK_PAYLOAD"
else
  echo "-----> Loading commit information from Github"
  COMMIT_JSON=$(curl -H "Authorization: token $DEPLOY_NOTIFY_GITHUB_AUTH_TOKEN" https://api.github.com/repos/$DEPLOY_NOTIFY_GITHUB_ORG/$DEPLOY_NOTIFY_GITHUB_PROJECT/commits/$SOURCE_VERSION)
  COMMIT_MESSAGE=$(echo "$COMMIT_JSON" | jq -r '.commit.message')
  COMMIT_URL=$(echo "$COMMIT_JSON" | jq -r '.html_url // "Can not reach Github..."')
  COMMIT_SHA=$(echo "$COMMIT_JSON" | jq -r '.sha')
  SHORT_SHA=${COMMIT_SHA:0:8}
  SLACK_PAYLOAD=$(jq -n \
    --arg msg "$COMMIT_MESSAGE" \
    --arg url "$COMMIT_URL" \
    --arg sha "$SHORT_SHA" \
    '{
      blocks: [
        {
          type: "section",
          text: {
            type: "mrkdwn",
            text: "*MightyCheck* deployed :rocket:\n• \($msg)\n• Commit: <\($url)|\($sha)>"
          }
        }
      ]
    }'
  )
fi

echo "-----> Notifying Slack that the deploy is complete"
echo "       $SLACK_PAYLOAD"
curl -s -X POST -H 'Content-type: application/json' --data "${SLACK_PAYLOAD}" $SLACK_DEPLOYMENT_WEBHOOK_URL
echo ""
echo ""
